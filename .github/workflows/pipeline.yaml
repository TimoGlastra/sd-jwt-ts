name: 'Pipeline'

on:
    push:
        tags:
            - 'v*'
        branches:
            - main

    pull_request:
        types: [opened, synchronize]

    workflow_dispatch:
        inputs:
            release-type:
                description: 'Type of release (major, minor, patch, alpha)'
                required: true
                default: alpha
                type: choice
                options:
                    - major
                    - minor
                    - patch
                    - alpha

jobs:
    continous-integration:
        name: 'Continuous Integration'
        runs-on: ubuntu-latest
        if: github.event_name != 'workflow_dispatch' && !startsWith(github.ref, 'refs/tags/')

        steps:
            - uses: actions/checkout@v3

            - uses: pnpm/action-setup@v2
              with:
                  version: 8.6.0

            - name: Install dependencies
              run: pnpm install

            - name: Check formatting
              run: pnpm check-format

            - name: Build
              run: pnpm build

            - name: Check types
              run: pnpm check-types

            - name: Test
              run: pnpm test

            - name: Examples
              run: |
                  pnpm build
                  pnpm examples

    continious-deployment:
        if: github.event_name == 'workflow_dispatch'

        name: 'Continous Deployment'
        runs-on: ubuntu-latest
        needs: ['continous-integration']

        steps:
            - uses: actions/checkout@v3

            - uses: pnpm/action-setup@v2
              with:
                  version: 8.6.0

            - name: Install dependencies
              run: pnpm install

            - name: Build
              run: pnpm build

            - name: Initialise the NPM config
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN

            - name: Publish
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: |
                  echo ${{ inputs.release-type }}
                  git config --global user.email "sliedrecht@berend.io"
                  git config --global user.name "Berend Sliedrecht"

                  if [ ${{ inputs.release-type }} == 'alpha' ]; then
                    pnpm release prerelease --yes
                  else
                    pnpm release ${{ inputs.release-type }} --yes
                  fi

    create-release:
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        name: 'Create Release'
        runs-on: ubuntu-latest

        steps:
            - name: Create Github Release
              uses: softprops/action-gh-release@v1
              with:
                  generate_release_notes: true
                  prerelease: ${{ contains(github.ref, '-alpha.') }}
                  token: ${{ secrets.GH_TOKEN }}
